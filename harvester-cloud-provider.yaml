---
# Secret: Harvester cloud-config
apiVersion: v1
kind: Secret
metadata:
  name: harvester-cloud-config
  namespace: kube-system
data:
  cloud-config: >-
    YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbFJFTkRRVklyWjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVd0TlUwbDNTVUZaUkZaUlVVUkVRbXg1WVRKVmVVeFlUbXdLWTI1YWJHTnBNV3BaVlVGNFRucEJlazVxUlhsT1ZHYzFUVUkwV0VSVVNYcE5WRWw1VG1wRk0wNUVUWGRQVm05WVJGUk5lazFVU1hsTmVrVXpUa1JOZHdwUFZtOTNTa1JGYVUxRFFVZEJNVlZGUVhkM1dtTnRkR3hOYVRGNldsaEtNbHBZU1hSWk1rWkJUVlJqZDAxNldYaE5hbFUwVDFSQ1drMUNUVWRDZVhGSENsTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKRk9FVkxlamxRTW0wM05XSkZZelJ5YUc4MFprNXBTM0I2TkdkTFIxWktaMngxYzNBNVIzY0tObWRKVERsQk5UTm9hWEJxT0hOaE0waGlXRk5KZVVoU1pqUjFlbEJSZDBneVVWbHRPVlJWVmxSSVJGbGpReXRxVVdwQ1FVMUJORWRCTVZWa1JIZEZRZ292ZDFGRlFYZEpRM0JFUVZCQ1owNVdTRkpOUWtGbU9FVkNWRUZFUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVWpBelVrbFVTamh6Vm1STldVWlNSME5GQ214VmVtRjJWWEUzWjJwQlMwSm5aM0ZvYTJwUFVGRlJSRUZuVGtoQlJFSkZRV2xCWkRGcGEzVTRkVnB0TTA5WWVXSTJTR3RpUjJ0dVlrNU5RbTQzVW1ZS2NqbHpkRFU1UWt0SGRrTXJaVUZKWjFNdmQyUTBaV3RoY0hGUk1GaEJlV2RtWld4UFIwdENNSEIwYkc1eFJVRnJja2RtTWxWMFdXOXhVRWs5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTcyLjE2Ljg4LjExOjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICBuYW1lc3BhY2U6IHRvb2xzCiAgICB1c2VyOiBzYS10b29scy10b29scy1kZWZhdWx0CiAgbmFtZTogc2EtdG9vbHMtdG9vbHMtZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IHNhLXRvb2xzLXRvb2xzLWRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBzYS10b29scy10b29scy1kZWZhdWx0CiAgdXNlcjoKICAgIHRva2VuOiBleUpoYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SWtRMlZsZENiekIxYkY5elNqVXpTMlpwTW1wQ1RYaGpNblJHWm1OWFRGbzFjV1V0ZFdkV04yNXZUMEVpZlEuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjBiMjlzY3lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZqY21WMExtNWhiV1VpT2lKellTMTBiMjlzY3kxMGIydGxiaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUp6WVMxMGIyOXNjeUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJall5WmpSbFpUazRMV013TmpBdE5EVTJPUzFoWlRRMExUWXpaVEExTVdJd05HTXdZeUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwMGIyOXNjenB6WVMxMGIyOXNjeUo5LnFKWWtZTE1sbmV4RWdIQnNCVzNJM09XdEJlb0JubGpENS1mcl9udjVDMEJ0YUZFS1RqU3l2YlNGa1JfbmttYklkd2lYUTlzbWNncm0yQ05QRkRWa2xpNmQxNkRhdExwMXctQzMxR0NIc3lSZC0yVEVOWGtPNkVOZWlVZV9nMkRVOTFrNXV2aUhrbjVfcXczMEljbm5mZjhOVTBQWFNEMUlXa0tMQVMwMHRfNzhMQkRoNGxNRzZVSEtIMG4tWFRpblFKeEZUODBwRzJINDZhbG0za2pZaEJ0UGxBWnNsSjNvLTFwR29vXy1keFZLeV91VHFidDE0dDBiZFlKQW1MV3dLcTlKaGxBcWs5cUNRLWZ6R09mRTY3VEZHWkg0TDMyZVl5NmZqQVVRbUFQVkF2YXB3VzctUjRQUW1uRS03TGJYRTlFb1RlREMyTTJQM1J1eno4clpDQQ==
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
  labels:
    helm.sh/chart: kube-vip-0.4.2
    app.kubernetes.io/name: kube-vip
    app.kubernetes.io/instance: harvester-cloud-provider
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: harvester-cloud-provider
  namespace: kube-system
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.6
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: harvester-cloud-provider
    app.kubernetes.io/version: "v0.2.0"
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: kube-vip
rules:
  - apiGroups: [""]
    resources: ["services", "services/status", "nodes"]
    verbs: ["list","get","watch", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["list", "get", "watch", "update", "create"]
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: harvester-cloud-provider
rules:
  - apiGroups: [ "" ]
    resources: [ "services", "nodes", "events" ]
    verbs: [ "get", "watch", "list", "update", "create", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes/status", "services/status" ]
    verbs: [ "update", "patch" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "update", "create" ]
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-vip
  labels:
    helm.sh/chart: kube-vip-0.4.2
    app.kubernetes.io/name: kube-vip
    app.kubernetes.io/instance: harvester-cloud-provider
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip
subjects:
- kind: ServiceAccount
  name: kube-vip
  namespace: kube-system
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harvester-cloud-provider
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.6
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: harvester-cloud-provider
    app.kubernetes.io/version: "v0.2.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harvester-cloud-provider
subjects:
  - kind: ServiceAccount
    name: harvester-cloud-provider
    namespace: kube-system
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-vip
      app.kubernetes.io/instance: harvester-cloud-provider
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-vip
        app.kubernetes.io/instance: harvester-cloud-provider
    spec:
      containers:
      - args:
          - manager
        env:
          - name: "cp_enable"
            value: "false"
          - name: "enable_service_security"
            value: "true"
          - name: "lb_enable"
            value: "true"
          - name: "lb_port"
            value: "6443"
          - name: "svc_enable"
            value: "true"
          - name: "vip_arp"
            value: "true"
          - name: "vip_cidr"
            value: "32"
          - name: "vip_interface"
            value: ""
          - name: "vip_leaderelection"
            value: "false"
        image: rancher/mirrored-kube-vip-kube-vip-iptables:v0.6.0
        imagePullPolicy: IfNotPresent
        name: kube-vip
        resources:
          {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
      hostNetwork: true
      serviceAccountName: kube-vip
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
---
# Source: harvester-cloud-provider/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-system
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.6
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: harvester-cloud-provider
    app.kubernetes.io/version: "v0.2.0"
  name: harvester-cloud-provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: harvester-cloud-provider
      app.kubernetes.io/instance: harvester-cloud-provider
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harvester-cloud-provider
        app.kubernetes.io/instance: harvester-cloud-provider
    spec:
      serviceAccountName: harvester-cloud-provider
      hostNetwork: true
      containers:
        - name: harvester-cloud-provider
          image: rancher/harvester-cloud-provider:v0.2.2
          imagePullPolicy: IfNotPresent
          args:
            - --cloud-config=/etc/kubernetes/cloud-config
          command:
            - harvester-cloud-provider
          resources:
            {}
          # volumeMounts:
          #   - mountPath: /etc/kubernetes/cloud-config
          #     name: cloud-config
          volumeMounts:
            - name: cloud-config
              mountPath: /etc/kubernetes/cloud-config
              subPath: cloud-config
              readOnly: true              
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - harvester-cloud-provider
            topologyKey: kubernetes.io/hostname
      tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Equal
        - effect: NoSchedule
          key: cattle.io/os
          operator: Equal
          value: linux
      # volumes:
      #   - name: cloud-config
      #     hostPath:
      #       path: /etc/kubernetes/cloud-config
      #       type: File
      volumes:
        - name: cloud-config
          secret:
            secretName: harvester-cloud-config


